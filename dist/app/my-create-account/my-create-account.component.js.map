{"version":3,"file":"my-create-account.component.js","sourceRoot":"","sources":["my-create-account.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAYA;gBAOE,kCAAoB,MAAc,EAAS,WAA4B;oBAAnD,WAAM,GAAN,MAAM,CAAQ;oBAAS,gBAAW,GAAX,WAAW,CAAiB;oBALvE,UAAK,GAAW,EAAE,CAAC;oBACnB,aAAQ,GAAW,EAAE,CAAC;oBACtB,aAAQ,GAAW,EAAE,CAAC;oBACtB,qBAAgB,GAAY,EAAE,CAAC;gBAE2C,CAAC;gBAE3E,2CAAQ,GAAR;gBACA,CAAC;gBAED,gDAAa,GAAb;oBAAA,iBAoCC;oBAnCC,IAAI,IAAW,CAAC;oBAEhB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,CAAC;wBAEtE,IAAI,mBAAmB,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACpF,mBAAmB,CAAC,IAAI,CAAC,UAAA,MAAM;4BAC7B,IAAI,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;4BAC5B,IAAI,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;4BAClC,EAAE,CAAA,CAAC,KAAK,CAAC,CAAC,CAAC;gCACT,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;oCACnB,KAAK,aAAa;wCAChB,KAAI,CAAC,gBAAgB,GAAG,6EAA6E,CAAC;wCACtG,KAAK,CAAC;oCACR,KAAK,eAAe;wCAClB,KAAI,CAAC,gBAAgB,GAAG,2CAA2C,CAAC;wCACpE,KAAK,CAAC;oCACR;wCACE,KAAI,CAAC,gBAAgB,GAAG,uBAAuB,GAAG,KAAK,CAAC;gCAC5D,CAAC;4BACH,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;gCAC3B,IAAI,IAAI,GAAU,EAAE,QAAQ,EAAE,KAAI,CAAC,QAAQ;oCACvB,GAAG,EAAE,QAAQ,CAAC,GAAG;oCACjB,MAAM,EAAE,CAAC,EAAE,CAAC;oCACZ,SAAS,EAAE,EAAE;oCACb,QAAQ,EAAE,EAAE;oCACZ,KAAK,EAAE,KAAI,CAAC,KAAK,EAAE,CAAA;gCAEvC,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;gCAChD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;4BACnC,CAAC;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC;oBAAA,IAAI,CAAC,CAAC;wBACL,IAAI,CAAC,gBAAgB,GAAG,sCAAsC,CAAA;oBAChE,CAAC;gBACH,CAAC;gBAtDH;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,YAAY;wBACtB,QAAQ,EAAE,mBAAmB;wBAC7B,WAAW,EAAE,kCAAkC;wBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;qBAC/C,CAAC;;4CAAA;gBAkDF,+BAAC;YAAD,CAAC,AAjDD,IAiDC;YAjDD,+DAiDC,CAAA","sourcesContent":["import {Component, OnInit, Inject} from 'angular2/core';\nimport {FirebaseRef, AngularFire} from 'angularfire2';\nimport {User} from '../IUser';\nimport {Router} from 'angular2/router';\nimport {MyUsersService} from '../my-users.service'\n\n@Component({\n  moduleId: __moduleName,\n  selector: 'my-create-account',\n  templateUrl: 'my-create-account.component.html',\n  styleUrls: ['my-create-account.component.css']\n})\nexport class MyCreateAccountComponent implements OnInit {\n\n  email: string = '';\n  password: string = '';\n  username: string = '';  \n  createAnnotation : string = '';\n  \n  constructor(private router: Router, public userService : MyUsersService) {}\n  \n  ngOnInit() {\n  }\n  \n  createAccount() {\n    var self : this;\n    \n    if (this.email !== '' && this.password !== '' && this.username !== '') {\n     \n      var createAccountResult = this.userService.createAccount(this.email, this.password);\n      createAccountResult.then(result => {\n        let error = result[\"error\"];\n        let userData = result[\"userData\"];\n        if(error) {\n          switch (error.code) {\n            case \"EMAIL_TAKEN\":\n              this.createAnnotation = 'The new user account cannot be created because the email is already in use.';\n              break;\n            case \"INVALID_EMAIL\":\n              this.createAnnotation = 'The specified email is not a valid email.';\n              break;\n            default:\n              this.createAnnotation = 'Error creating user: ' + error;\n          }\n        } else {\n          this.createAnnotation = '';\n          let user : User = { username: this.username,\n                              uid: userData.uid,\n                              events: [''],\n                              firstName: '',\n                              lastName: '',\n                              email: this.email }\n                            \n          this.userService.addUser(userData[\"uid\"], user);\n          this.router.navigate(['/Login']);\n        }\n      }); \n    }else {\n      this.createAnnotation = 'You need to fill all the textfields.'\n    }\n  }\n}\n"]}