import { ClientMessageBrokerFactory } from 'angular2/src/web_workers/shared/client_message_broker';
import { MessageBus } from 'angular2/src/web_workers/shared/message_bus';
import { AuthBackend, FirebaseAuthState, AuthProviders, OAuthCredentials } from '../../auth_backend';
import * as Firebase from 'firebase';
export declare class WebWorkerFirebaseAuth extends AuthBackend {
    private _fbRef;
    private _messageBroker;
    private _authMetadata;
    private _authCbs;
    private _gotAuth;
    constructor(_fbRef: Firebase, brokerFactory: ClientMessageBrokerFactory, bus: MessageBus);
    onAuth(onComplete: (authData: FirebaseAuthData) => void): void;
    getAuth(): FirebaseAuthData;
    createUser(creds: FirebaseCredentials): Promise<FirebaseAuthData>;
    authAnonymously(options?: any): Promise<FirebaseAuthState>;
    authWithCustomToken(token: string, options?: any): Promise<FirebaseAuthState>;
    authWithPassword(credentials: FirebaseCredentials, options?: any): Promise<FirebaseAuthState>;
    authWithOAuthPopup(provider: AuthProviders, options?: any): Promise<FirebaseAuthState>;
    authWithOAuthRedirect(provider: AuthProviders, options?: any): Promise<FirebaseAuthState>;
    authWithOAuthToken(provider: AuthProviders, credentialsObj: OAuthCredentials, options?: any): Promise<FirebaseAuthState>;
    unauth(): void;
    private _doAuth(promise);
    private _handleAuthPromise(authData);
}
